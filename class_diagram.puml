@startuml
skinparam classAttributeIconSize 0

class FamilyMember {
  - name: String
  - health: int
  - efficent: int
  - carriedItem: String
  + FamilyMember(String name, int health, int efficent)
  + carryItem(String item)
  + removeItem()
  + hasItem(String item): boolean
  + reduceHealth(int amount)
  + getName(): String
  + getHealth(): int
  + getEfficiency(): int
  + restoreHealth(int amount)
  + getDetails(): String
}

class InventoryItem {
  - name: String
  - type: String
  - durability: int
  + InventoryItem(String name, String type, int durability)
  + getName(): String
  + getType(): String
  + getDurability(): int
  + useItem()
  + isBroken(): boolean
  + getDetails(): String
}

abstract class Expedition {
  # {static} totalExpeditions: int
  # {static} totalLootCollected: int
  # loot: String
  # healthImpact: int
  # duration: int
  + Expedition()
  + startExpedition(FamilyMember member, InventoryItem item1, InventoryItem item2): String
  + {static} getTotalExpeditions(): int
  + {static} getTotalLootCollected(): int
}

class HouseRaid extends Expedition {
  + HouseRaid()
  + startExpedition(FamilyMember member, InventoryItem item1, InventoryItem item2): String
}

class TownRaid extends Expedition {
  + TownRaid()
  + startExpedition(FamilyMember member, InventoryItem item1, InventoryItem item2): String
}

class FactoryRaid extends Expedition {
  + FactoryRaid()
  + startExpedition(FamilyMember member, InventoryItem item1, InventoryItem item2): String
}

class HospitalRaid extends Expedition {
  + HospitalRaid()
  + startExpedition(FamilyMember member, InventoryItem item1, InventoryItem item2): String
}

class BanditAttack {
  - defendedSuccessfully: boolean
  - healthImpact: int
  + BanditAttack()
  + startAttack(FamilyMember familyMember): String
}

class SurvivalGame {
  + {static} main(String[] args)
}

' Relationships
SurvivalGame ..> FamilyMember : uses
SurvivalGame ..> InventoryItem : uses
SurvivalGame ..> Expedition : uses ' (and its subclasses implicitly)
SurvivalGame ..> BanditAttack : uses

Expedition ..> FamilyMember : uses
Expedition ..> InventoryItem : uses ' (via parameters)

BanditAttack ..> FamilyMember : uses

@enduml

